.ui.form
  = simple_form_for [@parent, @event_session] do |f|
    .field
      = f.label :title
      = f.hint t("hint.event_session.title")
      = f.input_field :title, as: :string
    .field
      = f.input :description, hint: t("hint.event_session.abstract")
    .inline.fields
      label for='event_session[session_type]'= EventSession.human_attribute_name(:session_type)
      - EventSession.session_types.each do |k,v|
        .field
          .ui.radio.checkbox
            = f.radio_button :session_type, k
            = f.label t("enum.event_session.session_type.#{k}")
    .inline.fields
      label for='event_session[level]'= EventSession.human_attribute_name(:level)
      - EventSession.levels.each do |k,v|
        .field
          .ui.radio.checkbox
            = f.radio_button :level, k
            = f.label t("enum.event_session.level.#{k}")

    .two.fields
      = f.input :duration, collection: [ "Presentation (60 or 45 min incl. Q&A)", "Short talk (20 or 30 minutes incl. Q&A)", "Lightning talk (10 minutes or shorter, incl. Q&A)", "Workshop / tutorial (please specify length in abstract)"], as: :select, input_html: { class: 'ui fluid dropdown' }

      = f.input :language, collection: EventSession.languages.keys.to_a, as: :select, selected: 'no', input_html: { class: 'ui fluid dropdown' }, label_method: ->(e) { t("enum.language.#{e}") }

    .two.fields
      = f.input :co_presenters
      = f.input :tag_list, collection: ActsAsTaggableOn::Tag.all.map(&:name), as: :select, input_html: { class: 'ui fluid search selection dropdown dropdown-allow-additions', multiple: true }, hint: t("hint.event_session.tags")

    .field
      = f.input :comments_to_organizers

    - if current_user.administrator?
      .field
        = f.input :submitter_id, collection: User.all, prompt: "Select a user", label_method: :full_name, as: :select,  input_html: { class: 'ui fluid search selection dropdown' }

      .field
        = f.input :state, collection: EventSession.states.keys.to_a,
          as: :select,
          input_html: { class: 'ui fluid dropdown' },
          label_method: ->(e) { t("enum.event_session.state.#{e}") }

      .field: .ui.timedatepicker = f.input :start_time, as: :string
      .field
        = f.input :outline, as: :text

    = f.button :submit
